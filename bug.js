In Next.js 15, a particularly uncommon bug can arise when using the `app` directory and server components with a specific combination of data fetching and client-side routing.  Imagine a scenario where a server component fetches data based on a route parameter, and then passes that data down to a client component. If the client component attempts to make further data requests based on the initial route parameter (before it's fully hydrated) and the parameter value changes during client-side navigation, a race condition can occur, resulting in stale data being used. This race condition is exacerbated if the data fetch in the server component is asynchronous, creating a timing window where the client-side request gets ahead of the server-side data update.  Another less-common bug involves edge runtime errors that are difficult to debug, that might manifest as unhandled rejections because the Next.js error boundary may not catch edge runtime errors that aren't explicitly handled.